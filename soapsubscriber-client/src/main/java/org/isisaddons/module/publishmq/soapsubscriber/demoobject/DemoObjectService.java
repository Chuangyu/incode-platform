package org.isisaddons.module.publishmq.soapsubscriber.demoobject;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.1
 * 2015-06-19T16:26:16.642+01:00
 * Generated source version: 3.1.1
 * 
 */
@WebServiceClient(name = "DemoObjectService", 
                  wsdlLocation = "classpath:DemoObject.wsdl",
                  targetNamespace = "http://isisaddons.org/module/publishmq/soapsubscriber/DemoObject/") 
public class DemoObjectService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://isisaddons.org/module/publishmq/soapsubscriber/DemoObject/", "DemoObjectService");
    public final static QName DemoObjectOverSOAP = new QName("http://isisaddons.org/module/publishmq/soapsubscriber/DemoObject/", "DemoObjectOverSOAP");
    static {
        URL url = DemoObjectService.class.getClassLoader().getResource("DemoObject.wsdl");
        if (url == null) {
            java.util.logging.Logger.getLogger(DemoObjectService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "classpath:DemoObject.wsdl");
        }       
        WSDL_LOCATION = url;   
    }

    public DemoObjectService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public DemoObjectService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public DemoObjectService() {
        super(WSDL_LOCATION, SERVICE);
    }
    




    /**
     *
     * @return
     *     returns DemoObject
     */
    @WebEndpoint(name = "DemoObjectOverSOAP")
    public DemoObject getDemoObjectOverSOAP() {
        return super.getPort(DemoObjectOverSOAP, DemoObject.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns DemoObject
     */
    @WebEndpoint(name = "DemoObjectOverSOAP")
    public DemoObject getDemoObjectOverSOAP(WebServiceFeature... features) {
        return super.getPort(DemoObjectOverSOAP, DemoObject.class, features);
    }

}
